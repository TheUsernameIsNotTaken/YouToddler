/* tslint:disable */
/* eslint-disable */
/**
 * YouToddler - OpenAPI 3.0
 * This is an on-premise download manager for youtube-dlp. It should be based on the OpenAPI 3.0 specification.   _If you're looking for the sprint board, then click [here](https://manhatten.atlassian.net/jira/software/projects/MAN/boards/1)._  Some useful links: - [The YouToddler repository](https://github.com/cant0r/YouToddler) - [The backend API definition for YouToddler](https://manhatten.atlassian.net/wiki/spaces/AT/pages/6094879/YouToddler+Backend) - [The WebAPi definition for YouToddler](https://manhatten.atlassian.net/wiki/spaces/AT/pages/4063276/REST+API+interfaces)
 *
 * OpenAPI spec version: 0.2.1
 * Contact: pixelbetyar@mailbox.unideb.hu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
export interface ConfigurationParameters {
    apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);
    username?: string;
    password?: string;
    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => Promise<string>);
    basePath?: string;
    baseOptions?: any;
}

export class Configuration {
    /**
     * parameter for apiKey security
     * @param name security name
     * @memberof Configuration
     */
    apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);
    /**
     * parameter for basic security
     *
     * @type {string}
     * @memberof Configuration
     */
    username?: string;
    /**
     * parameter for basic security
     *
     * @type {string}
     * @memberof Configuration
     */
    password?: string;
    /**
     * parameter for oauth2 security
     * @param name security name
     * @param scopes oauth2 scope
     * @memberof Configuration
     */
    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => Promise<string>);
    /**
     * override base path
     *
     * @type {string}
     * @memberof Configuration
     */
    basePath?: string;
    /**
     * base options for axios calls
     *
     * @type {any}
     * @memberof Configuration
     */
    baseOptions?: any;

    constructor(param: ConfigurationParameters = {}) {
        this.apiKey = param.apiKey;
        this.username = param.username;
        this.password = param.password;
        this.accessToken = param.accessToken;
        this.basePath = param.basePath;
        this.baseOptions = param.baseOptions;
    }
}
